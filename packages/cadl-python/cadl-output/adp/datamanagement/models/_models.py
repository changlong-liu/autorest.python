# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class ClassificationSchema(_model_base.Model):
    """ClassificationSchema.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Classification schema identifier. Required.
    :vartype name: str
    :ivar schema_definition: Classification schema definition (JSON schema as string). Required.
    :vartype schema_definition: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    name: str = rest_field(readonly=True)
    """Classification schema identifier. Required. """
    schema_definition: str = rest_field(name="schemaDefinition", readonly=True)
    """Classification schema definition (JSON schema as string). Required. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class CompleteUploadMetadataFileRequest(_model_base.Model):
    """Request parameters for the complete upload metadata file API.

    All required parameters must be populated in order to send to Azure.

    :ivar pending_file_e_tag: The ETag of the uploaded metadata file. Required.
    :vartype pending_file_e_tag: str
    """

    pending_file_e_tag: str = rest_field(name="pendingFileETag")
    """The ETag of the uploaded metadata file. Required. """

    @overload
    def __init__(
        self,
        *,
        pending_file_e_tag: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class CustomErrorResponse(_model_base.Model):
    """Error response with 'x-ms-error-code' header.

    All required parameters must be populated in order to send to Azure.

    :ivar error: The error object. Required.
    :vartype error: ~adp.datamanagement.models.Error
    :ivar x_ms_error_code: Error code for specific error that occurred. Required.
    :vartype x_ms_error_code: str
    """

    error: "_models.Error" = rest_field()
    """The error object. Required. """
    x_ms_error_code: str = rest_field(name="x-ms-error-code")
    """Error code for specific error that occurred. Required. """

    @overload
    def __init__(
        self,
        *,
        error: "_models.Error",
        x_ms_error_code: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStream(_model_base.Model):
    """DataStream.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar data_stream_id: The data stream identifier. Required.
    :vartype data_stream_id: str
    :ivar resource_endpoint: The endpoint uri of the owning resource.
    :vartype resource_endpoint: str
    :ivar lineage: The data stream lineage information. Required.
    :vartype lineage: ~adp.datamanagement.models.DataStreamLineage
    :ivar status: The data stream status. Required. Known values are: "Created", "Completing",
     "Completed", "Failed", "Failing", "Clearing", and "Cleared".
    :vartype status: str or ~adp.datamanagement.models.DataStreamStatus
    :ivar type: The data stream type. Required. Known values are: "System", "Raw", and "Derived".
    :vartype type: str or ~adp.datamanagement.models.DataStreamType
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    data_stream_id: str = rest_field(name="dataStreamId", readonly=True)
    """The data stream identifier. Required. """
    resource_endpoint: Optional[str] = rest_field(name="resourceEndpoint", readonly=True)
    """The endpoint uri of the owning resource. """
    lineage: "_models.DataStreamLineage" = rest_field(readonly=True)
    """The data stream lineage information. Required. """
    status: Union[str, "_models.DataStreamStatus"] = rest_field(readonly=True)
    """The data stream status. Required. Known values are: \"Created\", \"Completing\", \"Completed\", \"Failed\", \"Failing\", \"Clearing\", and \"Cleared\"."""
    type: Union[str, "_models.DataStreamType"] = rest_field(readonly=True)
    """The data stream type. Required. Known values are: \"System\", \"Raw\", and \"Derived\"."""
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamClassification(_model_base.Model):
    """DataStreamClassification.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar schema_name: Classification schema name. Required.
    :vartype schema_name: str
    :ivar classification_object: Classification object model (JSON as string). Required.
    :vartype classification_object: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    schema_name: str = rest_field(name="schemaName", readonly=True)
    """Classification schema name. Required. """
    classification_object: str = rest_field(name="classificationObject", readonly=True)
    """Classification object model (JSON as string). Required. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamFile(_model_base.Model):
    """Data-stream file list.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: Client file name. Required.
    :vartype client_file_name: str
    :ivar file_uri: SAS signed URI for downloading the file from Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype file_uri: str
    :ivar external_time_stamp: UTC date and time indicating the start of file recording. Required.
    :vartype external_time_stamp: str
    :ivar size: Size in bytes. Required.
    :vartype size: int
    """

    client_file_name: str = rest_field(name="clientFileName", readonly=True)
    """Client file name. Required. """
    file_uri: str = rest_field(name="fileUri")
    """SAS signed URI for downloading the file from Azure Storage.
This URI expires in 24 hours. Required. """
    external_time_stamp: str = rest_field(name="externalTimeStamp")
    """UTC date and time indicating the start of file recording. Required. """
    size: int = rest_field()
    """Size in bytes. Required. """

    @overload
    def __init__(
        self,
        *,
        file_uri: str,
        external_time_stamp: str,
        size: int,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamInput(_model_base.Model):
    """Data-stream input definition.

    All required parameters must be populated in order to send to Azure.

    :ivar source_data_stream_id: The source data-stream identifier. Required.
    :vartype source_data_stream_id: str
    :ivar channels: Collection of the data stream's channels.
    :vartype channels: list[str]
    """

    source_data_stream_id: str = rest_field(name="sourceDataStreamId")
    """The source data-stream identifier. Required. """
    channels: Optional[List[str]] = rest_field()
    """Collection of the data stream's channels. """

    @overload
    def __init__(
        self,
        *,
        source_data_stream_id: str,
        channels: Optional[List[str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamLineage(_model_base.Model):
    """Data stream lineage information.

    All required parameters must be populated in order to send to Azure.

    :ivar producer_metadata: The data stream's metadata. Required.
    :vartype producer_metadata: dict[str, str]
    :ivar inputs: The data stream's inputs. Required.
    :vartype inputs: list[~adp.datamanagement.models.DataStreamInput]
    """

    producer_metadata: Dict[str, str] = rest_field(name="producerMetadata")
    """The data stream's metadata. Required. """
    inputs: List["_models.DataStreamInput"] = rest_field()
    """The data stream's inputs. Required. """

    @overload
    def __init__(
        self,
        *,
        producer_metadata: Dict[str, str],
        inputs: List["_models.DataStreamInput"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamLogsContainerBase(_model_base.Model):
    """Data-stream logs folder.

    All required parameters must be populated in order to send to Azure.

    :ivar log_folder_uri: SAS signed URI for accessing the logs container on Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype log_folder_uri: str
    """

    log_folder_uri: str = rest_field(name="logFolderUri")
    """SAS signed URI for accessing the logs container on Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        log_folder_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamRollingInformation(_model_base.Model):
    """Data stream rolling information.

    All required parameters must be populated in order to send to Azure.

    :ivar strategy: Data stream rolling strategy. Required. Known values are: "Time" and "Size".
    :vartype strategy: str or ~adp.datamanagement.models.DataStreamRollingStrategy
    :ivar unit: Data stream rolling unit. Required. Known values are: "Seconds", "Minutes", "kB",
     "MB", and "GB".
    :vartype unit: str or ~adp.datamanagement.models.DataStreamRollingUnit
    :ivar value: Data stream rolling value. Required.
    :vartype value: int
    """

    strategy: Union[str, "_models.DataStreamRollingStrategy"] = rest_field()
    """Data stream rolling strategy. Required. Known values are: \"Time\" and \"Size\"."""
    unit: Union[str, "_models.DataStreamRollingUnit"] = rest_field()
    """Data stream rolling unit. Required. Known values are: \"Seconds\", \"Minutes\", \"kB\", \"MB\", and \"GB\"."""
    value: int = rest_field()
    """Data stream rolling value. Required. """

    @overload
    def __init__(
        self,
        *,
        strategy: Union[str, "_models.DataStreamRollingStrategy"],
        unit: Union[str, "_models.DataStreamRollingUnit"],
        value: int,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamsGraph(_model_base.Model):
    """Graph of matched data streams by processing objects graph.

    All required parameters must be populated in order to send to Azure.

    :ivar data_stream_by_processing_object_id: Dictionary of data stream by processing object id.
     Required.
    :vartype data_stream_by_processing_object_id: dict[str, ~adp.datamanagement.models.DataStream]
    """

    data_stream_by_processing_object_id: Dict[str, "_models.DataStream"] = rest_field(
        name="dataStreamByProcessingObjectId"
    )
    """Dictionary of data stream by processing object id. Required. """

    @overload
    def __init__(
        self,
        *,
        data_stream_by_processing_object_id: Dict[str, "_models.DataStream"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamsGraphListResponse(_model_base.Model):
    """List of graphs of matched data streams by processing objects graph.

    All required parameters must be populated in order to send to Azure.

    :ivar data_streams_graphs: List of data streams matched graphs. Required.
    :vartype data_streams_graphs: list[~adp.datamanagement.models.DataStreamsGraph]
    """

    data_streams_graphs: List["_models.DataStreamsGraph"] = rest_field(name="dataStreamsGraphs")
    """List of data streams matched graphs. Required. """

    @overload
    def __init__(
        self,
        *,
        data_streams_graphs: List["_models.DataStreamsGraph"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DataStreamShardAccessInformation(_model_base.Model):
    """The access information to the data stream shard.

    All required parameters must be populated in order to send to Azure.

    :ivar shard_folder_uri: SAS signed URI for reading the shard folder content from Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype shard_folder_uri: str
    :ivar manifest_file_uri: SAS signed URI for reading the shard manifest file from Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype manifest_file_uri: str
    """

    shard_folder_uri: str = rest_field(name="shardFolderUri")
    """SAS signed URI for reading the shard folder content from Azure Storage.
This URI expires in 24 hours. Required. """
    manifest_file_uri: str = rest_field(name="manifestFileUri")
    """SAS signed URI for reading the shard manifest file from Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        shard_folder_uri: str,
        manifest_file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DefaultLroResponse(_model_base.Model):
    """DefaultLroResponse.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar operation_id: The operation Id. Required.
    :vartype operation_id: str
    :ivar status: The operation status. Required. Known values are: "Created", "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype status: str or ~adp.datamanagement.models.LongRunningOperationStatus
    :ivar operation_type: The operation type. "default"
    :vartype operation_type: str or ~adp.datamanagement.models.DefaultLroType
    :ivar error: The operation error.
    :vartype error: ~adp.datamanagement.models.Error
    :ivar result_uri: The operation final result URI. Will be returned if the operation succeeds
     via ``Location`` header in response.
    :vartype result_uri: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    operation_id: str = rest_field(name="operationId")
    """The operation Id. Required. """
    status: Union[str, "_models.LongRunningOperationStatus"] = rest_field(readonly=True)
    """The operation status. Required. Known values are: \"Created\", \"InProgress\", \"Succeeded\", \"Failed\", and \"Canceled\"."""
    operation_type: Optional[Union[str, "_models.DefaultLroType"]] = rest_field(name="operationType", readonly=True)
    """The operation type. \"default\""""
    error: Optional["_models.Error"] = rest_field(readonly=True)
    """The operation error. """
    result_uri: Optional[str] = rest_field(name="resultUri", readonly=True)
    """The operation final result URI. Will be returned if the operation succeeds via ``Location`` header in response. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        operation_id: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DerivedDataStreamFileInformation(_model_base.Model):
    """Information about a file.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: The file name as provided by the client. Required.
    :vartype client_file_name: str
    :ivar recording_timestamp_utc: The file recording UTC timestamp as provided by the client.
    :vartype recording_timestamp_utc: ~datetime.datetime
    """

    client_file_name: str = rest_field(name="clientFileName")
    """The file name as provided by the client. Required. """
    recording_timestamp_utc: Optional[datetime.datetime] = rest_field(name="recordingTimestampUtc")
    """The file recording UTC timestamp as provided by the client. """

    @overload
    def __init__(
        self,
        *,
        client_file_name: str,
        recording_timestamp_utc: Optional[datetime.datetime] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Discovery(_model_base.Model):
    """A discovery resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar discovery_id: The discovery identifier. Required.
    :vartype discovery_id: str
    :ivar external_package_id: ID of the external package (for example, the disk which contained
     data) which was used upon the creation of upload.
    :vartype external_package_id: str
    :ivar manifest_uri: SAS signed URI for accessing the discovery manifest file on Azure Storage.
     This URI expires in 24 hours.
    :vartype manifest_uri: str
    :ivar status: The discovery status. Known values are: "Created",
     "GeneratingSpecialFilesUploadInfo", "GeneratedSpecialFilesUploadInfo", "Completing",
     "Completed", "Aborting", "Aborted", and "Failed".
    :vartype status: str or ~adp.datamanagement.models.DiscoveryStatus
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    discovery_id: str = rest_field(name="discoveryId", readonly=True)
    """The discovery identifier. Required. """
    external_package_id: Optional[str] = rest_field(name="externalPackageId", readonly=True)
    """ID of the external package (for example, the disk which contained data) which was used upon the creation of upload. """
    manifest_uri: Optional[str] = rest_field(name="manifestUri", readonly=True)
    """SAS signed URI for accessing the discovery manifest file on Azure Storage.
This URI expires in 24 hours. """
    status: Optional[Union[str, "_models.DiscoveryStatus"]] = rest_field(readonly=True)
    """The discovery status. Known values are: \"Created\", \"GeneratingSpecialFilesUploadInfo\", \"GeneratedSpecialFilesUploadInfo\", \"Completing\", \"Completed\", \"Aborting\", \"Aborted\", and \"Failed\"."""
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DiscoveryLroResponse(_model_base.Model):
    """LRO of DiscoveryOperationType type.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar operation_id: The operation Id. Required.
    :vartype operation_id: str
    :ivar status: The operation status. Required. Known values are: "Created", "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype status: str or ~adp.datamanagement.models.LongRunningOperationStatus
    :ivar operation_type: The operation type. Known values are: "CompleteDiscovery",
     "FinalizeFileList", and "AbortDiscovery".
    :vartype operation_type: str or ~adp.datamanagement.models.DiscoveryOperationType
    :ivar error: The operation error.
    :vartype error: ~adp.datamanagement.models.Error
    :ivar result_uri: The operation final result URI. Will be returned if the operation succeeds
     via ``Location`` header in response.
    :vartype result_uri: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    operation_id: str = rest_field(name="operationId")
    """The operation Id. Required. """
    status: Union[str, "_models.LongRunningOperationStatus"] = rest_field(readonly=True)
    """The operation status. Required. Known values are: \"Created\", \"InProgress\", \"Succeeded\", \"Failed\", and \"Canceled\"."""
    operation_type: Optional[Union[str, "_models.DiscoveryOperationType"]] = rest_field(
        name="operationType", readonly=True
    )
    """The operation type. Known values are: \"CompleteDiscovery\", \"FinalizeFileList\", and \"AbortDiscovery\"."""
    error: Optional["_models.Error"] = rest_field(readonly=True)
    """The operation error. """
    result_uri: Optional[str] = rest_field(name="resultUri", readonly=True)
    """The operation final result URI. Will be returned if the operation succeeds via ``Location`` header in response. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        operation_id: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DiscoverySpecialFile(_model_base.Model):
    """A discovery special file resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: Client file name. Required.
    :vartype client_file_name: str
    :ivar file_uri: File name on storage. Required.
    :vartype file_uri: str
    """

    client_file_name: str = rest_field(name="clientFileName", readonly=True)
    """Client file name. Required. """
    file_uri: str = rest_field(name="fileUri")
    """File name on storage. Required. """

    @overload
    def __init__(
        self,
        *,
        file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class DiscoveryUpload(_model_base.Model):
    """A discovery upload resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar upload_id: Upload identifier. Required.
    :vartype upload_id: str
    :ivar manifest_uri: SAS signed URI for downloading the manifest file from Azure Storage.
     The manifest file contains list of all files in the group.
     This URI expires in 24 hours. Required.
    :vartype manifest_uri: str
    :ivar resource_endpoint: The endpoint uri of the owning resource.
    :vartype resource_endpoint: str
    """

    upload_id: str = rest_field(name="uploadId", readonly=True)
    """Upload identifier. Required. """
    manifest_uri: str = rest_field(name="manifestUri")
    """SAS signed URI for downloading the manifest file from Azure Storage.
The manifest file contains list of all files in the group.
This URI expires in 24 hours. Required. """
    resource_endpoint: Optional[str] = rest_field(name="resourceEndpoint", readonly=True)
    """The endpoint uri of the owning resource. """

    @overload
    def __init__(
        self,
        *,
        manifest_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Error(_model_base.Model):
    """The error object.

    All required parameters must be populated in order to send to Azure.

    :ivar code: One of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar message: A human-readable representation of the error. Required.
    :vartype message: str
    :ivar target: The target of the error.
    :vartype target: str
    :ivar details: An array of details about specific errors that led to this reported error.
     Required.
    :vartype details: list[~adp.datamanagement.models.Error]
    :ivar innererror: An object containing more specific information than the current object about
     the error.
    :vartype innererror: ~adp.datamanagement.models.InnerError
    """

    code: str = rest_field()
    """One of a server-defined set of error codes. Required. """
    message: str = rest_field()
    """A human-readable representation of the error. Required. """
    target: Optional[str] = rest_field()
    """The target of the error. """
    details: List["_models.Error"] = rest_field()
    """An array of details about specific errors that led to this reported error. Required. """
    innererror: Optional["_models.InnerError"] = rest_field()
    """An object containing more specific information than the current object about the error. """

    @overload
    def __init__(
        self,
        *,
        code: str,
        message: str,
        details: List["_models.Error"],
        target: Optional[str] = None,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class FileUploadInformation(_model_base.Model):
    """File upload information.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: File name specified by the client. Required.
    :vartype client_file_name: str
    :ivar file_uri: SAS signed URI for uploading (write) file to Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype file_uri: str
    """

    client_file_name: str = rest_field(name="clientFileName", readonly=True)
    """File name specified by the client. Required. """
    file_uri: str = rest_field(name="fileUri")
    """SAS signed URI for uploading (write) file to Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class FindDataStreamByLineageGraphRequestParameters(_model_base.Model):
    """Processing objects graph.

    All required parameters must be populated in order to send to Azure.

    :ivar processing_objects: The processing objects. Required.
    :vartype processing_objects: list[~adp.datamanagement.models.ProcessingObject]
    :ivar edges: The processing objects edges. Required.
    :vartype edges: list[~adp.datamanagement.models.ProcessingObjectEdge]
    """

    processing_objects: List["_models.ProcessingObject"] = rest_field(name="processingObjects")
    """The processing objects. Required. """
    edges: List["_models.ProcessingObjectEdge"] = rest_field()
    """The processing objects edges. Required. """

    @overload
    def __init__(
        self,
        *,
        processing_objects: List["_models.ProcessingObject"],
        edges: List["_models.ProcessingObjectEdge"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class FindDataStreamByLineageRequestParameters(_model_base.Model):
    """Data stream search by lineage query parameters.

    All required parameters must be populated in order to send to Azure.

    :ivar lineage: The data-stream lineage to search for. Required.
    :vartype lineage: ~adp.datamanagement.models.DataStreamLineage
    """

    lineage: "_models.DataStreamLineage" = rest_field()
    """The data-stream lineage to search for. Required. """

    @overload
    def __init__(
        self,
        *,
        lineage: "_models.DataStreamLineage",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class FindDataStreamByTagsRequestParameters(_model_base.Model):
    """Data stream search by tags parameters.

    All required parameters must be populated in order to send to Azure.

    :ivar tags: The list of tags to search for. Required.
    :vartype tags: dict[str, str]
    """

    tags: Dict[str, str] = rest_field()
    """The list of tags to search for. Required. """

    @overload
    def __init__(
        self,
        *,
        tags: Dict[str, str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class InnerError(_model_base.Model):
    """An object containing more specific information about the error. As per Microsoft One API
    guidelines -
    https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.

    All required parameters must be populated in order to send to Azure.

    :ivar code: One of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar innererror: Inner error.
    :vartype innererror: ~adp.datamanagement.models.InnerError
    """

    code: str = rest_field()
    """One of a server-defined set of error codes. Required. """
    innererror: Optional["_models.InnerError"] = rest_field()
    """Inner error. """

    @overload
    def __init__(
        self,
        *,
        code: str,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class LongRunningOperationWithResponseHeaders(_model_base.Model):
    """LongRunningOperationWithResponseHeaders.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar operation_id: The unique ID of the operation. Required.
    :vartype operation_id: str
    :ivar status: The operation status. Required. Known values are: "Created", "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype status: str or ~adp.datamanagement.models.LongRunningOperationStatus
    :ivar operation_type: The operation type.
    :vartype operation_type: str
    :ivar error: The operation error.
    :vartype error: ~adp.datamanagement.models.Error
    :ivar result_uri: The operation final result URI. Will be returned if the operation succeeds
     via ``Location`` header in response.
    :vartype result_uri: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    :ivar retry_after: The Retry-After header can indicate how long the client should wait before
     polling the operation status.
    :vartype retry_after: int
    :ivar location: Final location of the operation result.
    :vartype location: str
    """

    operation_id: str = rest_field(name="operationId", readonly=True)
    """The unique ID of the operation. Required. """
    status: Union[str, "_models.LongRunningOperationStatus"] = rest_field(readonly=True)
    """The operation status. Required. Known values are: \"Created\", \"InProgress\", \"Succeeded\", \"Failed\", and \"Canceled\"."""
    operation_type: Optional[str] = rest_field(name="operationType", readonly=True)
    """The operation type. """
    error: Optional["_models.Error"] = rest_field(readonly=True)
    """The operation error. """
    result_uri: Optional[str] = rest_field(name="resultUri", readonly=True)
    """The operation final result URI. Will be returned if the operation succeeds via ``Location`` header in response. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """
    retry_after: Optional[int] = rest_field(name="retryAfter")
    """The Retry-After header can indicate how long the client should wait before polling the operation status. """
    location: Optional[str] = rest_field()
    """Final location of the operation result. """

    @overload
    def __init__(
        self,
        *,
        retry_after: Optional[int] = None,
        location: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Measurement(_model_base.Model):
    """Measurement.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar measurement_id: The measurement identifier. Required.
    :vartype measurement_id: str
    :ivar location: The storage account location which contains the measurement. Required.
    :vartype location: str
    :ivar ingest_timestamp_utc: The UTC time the measurement was ingested at.
    :vartype ingest_timestamp_utc: ~datetime.datetime
    :ivar resource_endpoint: The endpoint uri of the owning resource.
    :vartype resource_endpoint: str
    :ivar external_package_id: The ID of the external package (for example, the disk which
     contained data) as specified by the customer upon data ingestion.
    :vartype external_package_id: str
    :ivar upload_id: ID of the upload process which caused the creation of this measurement.
    :vartype upload_id: str
    :ivar discovery_id: ID of the discovery process which caused the creation of this measurement.
    :vartype discovery_id: str
    :ivar record_timestamp_utc: The UTC time the measurement was recorded at.
    :vartype record_timestamp_utc: ~datetime.datetime
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    measurement_id: str = rest_field(name="measurementId", readonly=True)
    """The measurement identifier. Required. """
    location: str = rest_field()
    """The storage account location which contains the measurement. Required. """
    ingest_timestamp_utc: Optional[datetime.datetime] = rest_field(name="ingestTimestampUtc")
    """The UTC time the measurement was ingested at. """
    resource_endpoint: Optional[str] = rest_field(name="resourceEndpoint", readonly=True)
    """The endpoint uri of the owning resource. """
    external_package_id: Optional[str] = rest_field(name="externalPackageId")
    """The ID of the external package (for example, the disk which contained data) as specified by the customer upon data ingestion. """
    upload_id: Optional[str] = rest_field(name="uploadId")
    """ID of the upload process which caused the creation of this measurement. """
    discovery_id: Optional[str] = rest_field(name="discoveryId")
    """ID of the discovery process which caused the creation of this measurement. """
    record_timestamp_utc: Optional[datetime.datetime] = rest_field(name="recordTimestampUtc")
    """The UTC time the measurement was recorded at. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        location: str,
        ingest_timestamp_utc: Optional[datetime.datetime] = None,
        external_package_id: Optional[str] = None,
        upload_id: Optional[str] = None,
        discovery_id: Optional[str] = None,
        record_timestamp_utc: Optional[datetime.datetime] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementClassification(_model_base.Model):
    """MeasurementClassification.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar schema_name: Classification schema name. Required.
    :vartype schema_name: str
    :ivar classification_object: Classification object model (JSON as string). Required.
    :vartype classification_object: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    schema_name: str = rest_field(name="schemaName", readonly=True)
    """Classification schema name. Required. """
    classification_object: str = rest_field(name="classificationObject", readonly=True)
    """Classification object model (JSON as string). Required. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementListRequestParameters(_model_base.Model):
    """A wrapper for the List of measurements IDs.

    All required parameters must be populated in order to send to Azure.

    :ivar measurement_ids: The measurement IDs list. Required.
    :vartype measurement_ids: list[str]
    """

    measurement_ids: List[str] = rest_field(name="measurementIds")
    """The measurement IDs list. Required. """

    @overload
    def __init__(
        self,
        *,
        measurement_ids: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementMetadataBase(_model_base.Model):
    """Measurement metadata without resource identifier.

    All required parameters must be populated in order to send to Azure.

    :ivar metadata: The measurement metadata dictionary. Required.
    :vartype metadata: dict[str, str]
    """

    metadata: Dict[str, str] = rest_field()
    """The measurement metadata dictionary. Required. """

    @overload
    def __init__(
        self,
        *,
        metadata: Dict[str, str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementMetadataFileInfoBase(_model_base.Model):
    """Measurement metadata file information model.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar metadata_file_name: The measurement's metadata file name. Required.
    :vartype metadata_file_name: str
    :ivar metadata_file_uri: SAS signed URI to measurement metadata file.
     If file already exists on storage then ETag of this file will be returned in the response
     header.
     This URI expires in 24 hours. Required.
    :vartype metadata_file_uri: str
    :ivar etag_header: The entity tag for the response.
    :vartype etag_header: str
    """

    metadata_file_name: str = rest_field(name="metadataFileName")
    """The measurement's metadata file name. Required. """
    metadata_file_uri: str = rest_field(name="metadataFileUri")
    """SAS signed URI to measurement metadata file.
If file already exists on storage then ETag of this file will be returned in the response header.
This URI expires in 24 hours. Required. """
    etag_header: Optional[str] = rest_field(name="etagHeader", readonly=True)
    """The entity tag for the response. """

    @overload
    def __init__(
        self,
        *,
        metadata_file_name: str,
        metadata_file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementMetadataSchemaFileInfoBase(_model_base.Model):
    """Measurement metadata schema file information model.

    All required parameters must be populated in order to send to Azure.

    :ivar schema_file_name: Measurement schema file name.
    :vartype schema_file_name: str
    :ivar schema_file_uri: SAS signed URI for downloading the measurement metadata schema file from
     Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype schema_file_uri: str
    """

    schema_file_name: Optional[str] = rest_field(name="schemaFileName")
    """Measurement schema file name. """
    schema_file_uri: str = rest_field(name="schemaFileUri")
    """SAS signed URI for downloading the measurement metadata schema file from Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        schema_file_uri: str,
        schema_file_name: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementProcessingResultsBase(_model_base.Model):
    """The measurement's validation result.

    :ivar validation_passed: The measurement's validity.
    :vartype validation_passed: bool
    :ivar results: The measurement's rule validation results.
    :vartype results: list[~adp.datamanagement.models.MeasurementRuleValidationResult]
    """

    validation_passed: Optional[bool] = rest_field(name="validationPassed")
    """The measurement's validity. """
    results: Optional[List["_models.MeasurementRuleValidationResult"]] = rest_field()
    """The measurement's rule validation results. """

    @overload
    def __init__(
        self,
        *,
        validation_passed: Optional[bool] = None,
        results: Optional[List["_models.MeasurementRuleValidationResult"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementRuleValidationResult(_model_base.Model):
    """The result of evaluation of measurement validation rule.

    :ivar rule_category: Measurement validation rule category.
    :vartype rule_category: str
    :ivar rule_name: Measurement validation rule name.
    :vartype rule_name: str
    :ivar details: Measurement validation rule metadata.
    :vartype details: dict[str, str]
    :ivar validation_passed: Measurement validation rule evaluation result.
    :vartype validation_passed: bool
    :ivar validation_error: Measurement validation error message.
    :vartype validation_error: str
    """

    rule_category: Optional[str] = rest_field(name="ruleCategory")
    """Measurement validation rule category. """
    rule_name: Optional[str] = rest_field(name="ruleName")
    """Measurement validation rule name. """
    details: Optional[Dict[str, str]] = rest_field()
    """Measurement validation rule metadata. """
    validation_passed: Optional[bool] = rest_field(name="validationPassed")
    """Measurement validation rule evaluation result. """
    validation_error: Optional[str] = rest_field(name="validationError")
    """Measurement validation error message. """

    @overload
    def __init__(
        self,
        *,
        rule_category: Optional[str] = None,
        rule_name: Optional[str] = None,
        details: Optional[Dict[str, str]] = None,
        validation_passed: Optional[bool] = None,
        validation_error: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class MeasurementWithMetadata(_model_base.Model):
    """Custom query data set: Measurement and metadata.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar measurement_id: The measurement identifier. Required.
    :vartype measurement_id: str
    :ivar location: The storage account location which contains the measurement. Required.
    :vartype location: str
    :ivar ingest_timestamp_utc: The UTC time the measurement was ingested at.
    :vartype ingest_timestamp_utc: ~datetime.datetime
    :ivar resource_endpoint: The endpoint uri of the owning resource.
    :vartype resource_endpoint: str
    :ivar external_package_id: The ID of the external package (for example, the disk which
     contained data) as specified by the customer upon data ingestion.
    :vartype external_package_id: str
    :ivar upload_id: ID of the upload process which caused the creation of this measurement.
    :vartype upload_id: str
    :ivar discovery_id: ID of the discovery process which caused the creation of this measurement.
    :vartype discovery_id: str
    :ivar record_timestamp_utc: The UTC time the measurement was recorded at.
    :vartype record_timestamp_utc: ~datetime.datetime
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    :ivar metadata: The measurement metadata dictionary. Required.
    :vartype metadata: dict[str, str]
    """

    measurement_id: str = rest_field(name="measurementId", readonly=True)
    """The measurement identifier. Required. """
    location: str = rest_field()
    """The storage account location which contains the measurement. Required. """
    ingest_timestamp_utc: Optional[datetime.datetime] = rest_field(name="ingestTimestampUtc")
    """The UTC time the measurement was ingested at. """
    resource_endpoint: Optional[str] = rest_field(name="resourceEndpoint", readonly=True)
    """The endpoint uri of the owning resource. """
    external_package_id: Optional[str] = rest_field(name="externalPackageId")
    """The ID of the external package (for example, the disk which contained data) as specified by the customer upon data ingestion. """
    upload_id: Optional[str] = rest_field(name="uploadId")
    """ID of the upload process which caused the creation of this measurement. """
    discovery_id: Optional[str] = rest_field(name="discoveryId")
    """ID of the discovery process which caused the creation of this measurement. """
    record_timestamp_utc: Optional[datetime.datetime] = rest_field(name="recordTimestampUtc")
    """The UTC time the measurement was recorded at. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """
    metadata: Dict[str, str] = rest_field()
    """The measurement metadata dictionary. Required. """

    @overload
    def __init__(
        self,
        *,
        location: str,
        metadata: Dict[str, str],
        ingest_timestamp_utc: Optional[datetime.datetime] = None,
        external_package_id: Optional[str] = None,
        upload_id: Optional[str] = None,
        discovery_id: Optional[str] = None,
        record_timestamp_utc: Optional[datetime.datetime] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedClassificationSchema(_model_base.Model):
    """Paged collection of ClassificationSchema items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The ClassificationSchema items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.ClassificationSchema]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.ClassificationSchema"] = rest_field()
    """The ClassificationSchema items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDataStream(_model_base.Model):
    """Paged collection of DataStream items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DataStream items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DataStream]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DataStream"] = rest_field()
    """The DataStream items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDataStreamClassification(_model_base.Model):
    """Paged collection of DataStreamClassification items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DataStreamClassification items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DataStreamClassification]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DataStreamClassification"] = rest_field()
    """The DataStreamClassification items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDataStreamFile(_model_base.Model):
    """Paged collection of DataStreamFile items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DataStreamFile items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DataStreamFile]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DataStreamFile"] = rest_field()
    """The DataStreamFile items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDataStreamsGraphListResponse(_model_base.Model):
    """Paged collection of DataStreamsGraphListResponse items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DataStreamsGraphListResponse items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DataStreamsGraphListResponse]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DataStreamsGraphListResponse"] = rest_field()
    """The DataStreamsGraphListResponse items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDiscoverySpecialFile(_model_base.Model):
    """Paged collection of DiscoverySpecialFile items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DiscoverySpecialFile items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DiscoverySpecialFile]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DiscoverySpecialFile"] = rest_field()
    """The DiscoverySpecialFile items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedDiscoveryUpload(_model_base.Model):
    """Paged collection of DiscoveryUpload items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The DiscoveryUpload items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.DiscoveryUpload]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.DiscoveryUpload"] = rest_field()
    """The DiscoveryUpload items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedMeasurement(_model_base.Model):
    """Paged collection of Measurement items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Measurement items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.Measurement]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.Measurement"] = rest_field()
    """The Measurement items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedMeasurementClassification(_model_base.Model):
    """Paged collection of MeasurementClassification items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The MeasurementClassification items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.MeasurementClassification]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.MeasurementClassification"] = rest_field()
    """The MeasurementClassification items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedMeasurementWithMetadata(_model_base.Model):
    """Paged collection of MeasurementWithMetadata items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The MeasurementWithMetadata items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.MeasurementWithMetadata]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.MeasurementWithMetadata"] = rest_field()
    """The MeasurementWithMetadata items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedStateMachine(_model_base.Model):
    """Paged collection of StateMachine items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The StateMachine items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.StateMachine]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.StateMachine"] = rest_field()
    """The StateMachine items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedUploadDataFile(_model_base.Model):
    """Paged collection of UploadDataFile items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The UploadDataFile items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.UploadDataFile]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.UploadDataFile"] = rest_field()
    """The UploadDataFile items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedUploadResultMeasurement(_model_base.Model):
    """Paged collection of UploadResultMeasurement items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The UploadResultMeasurement items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.UploadResultMeasurement]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.UploadResultMeasurement"] = rest_field()
    """The UploadResultMeasurement items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class PagedUploadSpecialFile(_model_base.Model):
    """Paged collection of UploadSpecialFile items.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The UploadSpecialFile items on this page. Required.
    :vartype value: list[~adp.datamanagement.models.UploadSpecialFile]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    value: List["_models.UploadSpecialFile"] = rest_field()
    """The UploadSpecialFile items on this page. Required. """
    next_link: Optional[str] = rest_field(name="nextLink")
    """The link to the next page of items. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class ProcessingObject(_model_base.Model):
    """Processing object node information in a processing objects Graph.

    All required parameters must be populated in order to send to Azure.

    :ivar metadata: The processing object metadata. Required.
    :vartype metadata: dict[str, str]
    :ivar id: A request unique ID to identify processing objects in graph. Required.
    :vartype id: str
    """

    metadata: Dict[str, str] = rest_field()
    """The processing object metadata. Required. """
    id: str = rest_field()
    """A request unique ID to identify processing objects in graph. Required. """

    @overload
    def __init__(
        self,
        *,
        metadata: Dict[str, str],
        id: str,  # pylint: disable=redefined-builtin
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class ProcessingObjectEdge(_model_base.Model):
    """Processing objects edge.

    All required parameters must be populated in order to send to Azure.

    :ivar source_id: The source processing object ID. Required.
    :vartype source_id: str
    :ivar target_id: The target processing object ID. Required.
    :vartype target_id: str
    """

    source_id: str = rest_field(name="sourceId")
    """The source processing object ID. Required. """
    target_id: str = rest_field(name="targetId")
    """The target processing object ID. Required. """

    @overload
    def __init__(
        self,
        *,
        source_id: str,
        target_id: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class StateMachine(_model_base.Model):
    """StateMachine.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The state machine identifier. Required.
    :vartype id: str
    :ivar type: Type of the state machine. Required.
    :vartype type: str
    :ivar available_action_names: Type of the state machine. Required.
    :vartype available_action_names: list[str]
    """

    id: str = rest_field(readonly=True)
    """The state machine identifier. Required. """
    type: str = rest_field()
    """Type of the state machine. Required. """
    available_action_names: List[str] = rest_field(name="availableActionNames")
    """Type of the state machine. Required. """

    @overload
    def __init__(
        self,
        *,
        type: str,
        available_action_names: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class StateMachineAction(_model_base.Model):
    """State machine action name.

    All required parameters must be populated in order to send to Azure.

    :ivar action_name: The state machine action name. Required.
    :vartype action_name: str
    """

    action_name: str = rest_field(name="actionName")
    """The state machine action name. Required. """

    @overload
    def __init__(
        self,
        *,
        action_name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Storage(_model_base.Model):
    """A data-stream with unsharded storage resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The data stream storage identifier.
     Not in use as this is a singleton resource.
     TODO: check with CADL team how to define a singleton child resource without key. Required.
    :vartype id: str
    :ivar type: Storage type. Required.
    :vartype type: str
    :ivar rolling_information: The data stream rolling information.
    :vartype rolling_information: ~adp.datamanagement.models.DataStreamRollingInformation
    :ivar manifest_uri: SAS signed URI for downloading the data stream storage manifest file from
     Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype manifest_uri: str
    :ivar data_folder_uri: SAS signed URI for accessing the data stream data stored on the Azure
     Storage.
     This URI expires in 24 hours.
    :vartype data_folder_uri: str
    :ivar shards: The list of shards associated with the data stream. Required.
    :vartype shards: list[~adp.datamanagement.models.DataStreamShardAccessInformation]
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    id: str = rest_field(readonly=True)
    """The data stream storage identifier.
Not in use as this is a singleton resource.
TODO: check with CADL team how to define a singleton child resource without key. Required. """
    type: str = rest_field()
    """Storage type. Required. """
    rolling_information: Optional["_models.DataStreamRollingInformation"] = rest_field(
        name="rollingInformation", readonly=True
    )
    """The data stream rolling information. """
    manifest_uri: str = rest_field(name="manifestUri", readonly=True)
    """SAS signed URI for downloading the data stream storage manifest file from Azure Storage.
This URI expires in 24 hours. Required. """
    data_folder_uri: Optional[str] = rest_field(name="dataFolderUri", readonly=True)
    """SAS signed URI for accessing the data stream data stored on the Azure Storage.
This URI expires in 24 hours. """
    shards: List["_models.DataStreamShardAccessInformation"] = rest_field(readonly=True)
    """The list of shards associated with the data stream. Required. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        type: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class StorageBase(_model_base.Model):
    """Common data-stream storage model.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Storage type. Required.
    :vartype type: str
    :ivar rolling_information: The data stream rolling information.
    :vartype rolling_information: ~adp.datamanagement.models.DataStreamRollingInformation
    :ivar manifest_uri: SAS signed URI for downloading the data stream storage manifest file from
     Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype manifest_uri: str
    :ivar data_folder_uri: SAS signed URI for accessing the data stream data stored on the Azure
     Storage.
     This URI expires in 24 hours.
    :vartype data_folder_uri: str
    :ivar shards: The list of shards associated with the data stream. Required.
    :vartype shards: list[~adp.datamanagement.models.DataStreamShardAccessInformation]
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    type: str = rest_field()
    """Storage type. Required. """
    rolling_information: Optional["_models.DataStreamRollingInformation"] = rest_field(
        name="rollingInformation", readonly=True
    )
    """The data stream rolling information. """
    manifest_uri: str = rest_field(name="manifestUri", readonly=True)
    """SAS signed URI for downloading the data stream storage manifest file from Azure Storage.
This URI expires in 24 hours. Required. """
    data_folder_uri: Optional[str] = rest_field(name="dataFolderUri", readonly=True)
    """SAS signed URI for accessing the data stream data stored on the Azure Storage.
This URI expires in 24 hours. """
    shards: List["_models.DataStreamShardAccessInformation"] = rest_field(readonly=True)
    """The list of shards associated with the data stream. Required. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        type: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Tag(_model_base.Model):
    """Tag element.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar key: Tag identifier. Required.
    :vartype key: str
    :ivar value: Tag value. Required.
    :vartype value: str
    """

    key: str = rest_field(readonly=True)
    """Tag identifier. Required. """
    value: str = rest_field()
    """Tag value. Required. """

    @overload
    def __init__(
        self,
        *,
        value: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class TagSet(_model_base.Model):
    """A data-stream tags.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The data stream tag set identifier.
     Not in use as this is a singleton resource. Tags could be set or returned as singleton set.
     TODO: check with CADL team how to define a singleton child resource without key. Required.
    :vartype id: str
    :ivar tags: Set of data-stream tags. Required.
    :vartype tags: list[~adp.datamanagement.models.Tag]
    """

    id: str = rest_field(readonly=True)
    """The data stream tag set identifier.
Not in use as this is a singleton resource. Tags could be set or returned as singleton set.
TODO: check with CADL team how to define a singleton child resource without key. Required. """
    tags: List["_models.Tag"] = rest_field(readonly=True)
    """Set of data-stream tags. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class TagSetBase(_model_base.Model):
    """Tag set.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar tags: Set of data-stream tags. Required.
    :vartype tags: list[~adp.datamanagement.models.Tag]
    """

    tags: List["_models.Tag"] = rest_field(readonly=True)
    """Set of data-stream tags. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class Upload(_model_base.Model):
    """An upload resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar upload_id: The upload resource identifier. Required.
    :vartype upload_id: str
    :ivar external_package_id: ID of the external package (for example, the disk which contained
     data) which was used upon the creation of upload.
    :vartype external_package_id: str
    :ivar discovery_id: The discovery identifier.
    :vartype discovery_id: str
    :ivar manifest_uri: SAS signed URI for uploading or reading the upload manifest file on Azure
     Storage.
     Note, if the upload status is 'Created' then the URI is signed with 'Write' permissions,
     otherwise with 'Read' permission.
     This URI expires in 24 hours.
    :vartype manifest_uri: str
    :ivar status: The upload state. Known values are: "Created",
     "GeneratingSpecialFilesUploadInfo", "GeneratedSpecialFilesUploadInfo",
     "GeneratingDataFilesUploadInfo", "GeneratedDataFilesUploadInfo", "Completing", "Completed",
     "Aborting", "Aborted", and "Failed".
    :vartype status: str or ~adp.datamanagement.models.UploadStatus
    :ivar resource_endpoint: The endpoint uri of the owning resource.
    :vartype resource_endpoint: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    upload_id: str = rest_field(name="uploadId", readonly=True)
    """The upload resource identifier. Required. """
    external_package_id: Optional[str] = rest_field(name="externalPackageId", readonly=True)
    """ID of the external package (for example, the disk which contained data) which was used upon the creation of upload. """
    discovery_id: Optional[str] = rest_field(name="discoveryId", readonly=True)
    """The discovery identifier. """
    manifest_uri: Optional[str] = rest_field(name="manifestUri", readonly=True)
    """SAS signed URI for uploading or reading the upload manifest file on Azure Storage.
Note, if the upload status is 'Created' then the URI is signed with 'Write' permissions, otherwise with 'Read' permission.
This URI expires in 24 hours. """
    status: Optional[Union[str, "_models.UploadStatus"]] = rest_field(readonly=True)
    """The upload state. Known values are: \"Created\", \"GeneratingSpecialFilesUploadInfo\", \"GeneratedSpecialFilesUploadInfo\", \"GeneratingDataFilesUploadInfo\", \"GeneratedDataFilesUploadInfo\", \"Completing\", \"Completed\", \"Aborting\", \"Aborted\", and \"Failed\"."""
    resource_endpoint: Optional[str] = rest_field(name="resourceEndpoint", readonly=True)
    """The endpoint uri of the owning resource. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadDataFile(_model_base.Model):
    """Data file resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: File name specified by the client. Required.
    :vartype client_file_name: str
    :ivar file_uri: SAS signed URI for uploading (write) file to Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype file_uri: str
    """

    client_file_name: str = rest_field(name="clientFileName", readonly=True)
    """File name specified by the client. Required. """
    file_uri: str = rest_field(name="fileUri")
    """SAS signed URI for uploading (write) file to Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadDerivedDataStreamFilesRequest(_model_base.Model):
    """Data stream file upload parameters.

    All required parameters must be populated in order to send to Azure.

    :ivar files: The information of the files that are to be uploaded. Required.
    :vartype files: list[~adp.datamanagement.models.DerivedDataStreamFileInformation]
    """

    files: List["_models.DerivedDataStreamFileInformation"] = rest_field()
    """The information of the files that are to be uploaded. Required. """

    @overload
    def __init__(
        self,
        *,
        files: List["_models.DerivedDataStreamFileInformation"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadDerivedDataStreamFilesResponse(_model_base.Model):
    """Data stream file upload request parameters.

    All required parameters must be populated in order to send to Azure.

    :ivar files: Per-file upload instructions. Required.
    :vartype files: list[~adp.datamanagement.models.FileUploadInformation]
    """

    files: List["_models.FileUploadInformation"] = rest_field()
    """Per-file upload instructions. Required. """

    @overload
    def __init__(
        self,
        *,
        files: List["_models.FileUploadInformation"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadLroResponse(_model_base.Model):
    """LRO of UploadOperationType type.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar operation_id: The operation Id. Required.
    :vartype operation_id: str
    :ivar status: The operation status. Required. Known values are: "Created", "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype status: str or ~adp.datamanagement.models.LongRunningOperationStatus
    :ivar operation_type: The operation type. Known values are: "FinalizeFileList", "ShardFiles",
     "CompleteUpload", and "AbortUpload".
    :vartype operation_type: str or ~adp.datamanagement.models.UploadOperationType
    :ivar error: The operation error.
    :vartype error: ~adp.datamanagement.models.Error
    :ivar result_uri: The operation final result URI. Will be returned if the operation succeeds
     via ``Location`` header in response.
    :vartype result_uri: str
    :ivar etag: The entity tag for this resource. Required.
    :vartype etag: str
    """

    operation_id: str = rest_field(name="operationId")
    """The operation Id. Required. """
    status: Union[str, "_models.LongRunningOperationStatus"] = rest_field(readonly=True)
    """The operation status. Required. Known values are: \"Created\", \"InProgress\", \"Succeeded\", \"Failed\", and \"Canceled\"."""
    operation_type: Optional[Union[str, "_models.UploadOperationType"]] = rest_field(
        name="operationType", readonly=True
    )
    """The operation type. Known values are: \"FinalizeFileList\", \"ShardFiles\", \"CompleteUpload\", and \"AbortUpload\"."""
    error: Optional["_models.Error"] = rest_field(readonly=True)
    """The operation error. """
    result_uri: Optional[str] = rest_field(name="resultUri", readonly=True)
    """The operation final result URI. Will be returned if the operation succeeds via ``Location`` header in response. """
    etag: str = rest_field(readonly=True)
    """The entity tag for this resource. Required. """

    @overload
    def __init__(
        self,
        *,
        operation_id: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadResultMeasurement(_model_base.Model):
    """A measurement resource created as result of the upload.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar measurement_id: Measurement identifier. Required.
    :vartype measurement_id: str
    """

    measurement_id: str = rest_field(name="measurementId", readonly=True)
    """Measurement identifier. Required. """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class UploadSpecialFile(_model_base.Model):
    """Special file resource.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar client_file_name: File name specified by the client. Required.
    :vartype client_file_name: str
    :ivar file_uri: SAS signed URI for uploading (write) file to Azure Storage.
     This URI expires in 24 hours. Required.
    :vartype file_uri: str
    """

    client_file_name: str = rest_field(name="clientFileName", readonly=True)
    """File name specified by the client. Required. """
    file_uri: str = rest_field(name="fileUri")
    """SAS signed URI for uploading (write) file to Azure Storage.
This URI expires in 24 hours. Required. """

    @overload
    def __init__(
        self,
        *,
        file_uri: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """
        ...

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
